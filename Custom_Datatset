import os
import numpy as np
from torch.utils.data import Dataset
from torch.utils.data import DataLoader
import torchvision.transforms as T
import rasterio
import matplotlib.pyplot as plt

class CustomDataset(Dataset):

    def __init__(self,input_raster, tile_size=100, stride=10,transforms=None):

        raster = rasterio.open(input_raster).read()
        self.raster = raster[:,:100,:]
        self.tile_size = tile_size
        self.stride = stride
        self.transforms = transforms

    def __len__(self):
        return int(self.raster.shape[2]/self.tile_size)
        
    def __getitem__(self, idx):
        
        if idx == 0:
            start_y = 0
            end_y = self.tile_size
        
        else:
            start_y = idx*self.tile_size - self.stride
            end_y = (idx+1)*self.tile_size - self.stride

        data = self.raster[:,:,start_y:end_y]
        data = data.swapaxes(0,2)
        data = (data - np.min(data)) / (np.max(data) - np.min(data))
        # if self.transforms:
        #     data = self.transforms(data)
        return data
        
 